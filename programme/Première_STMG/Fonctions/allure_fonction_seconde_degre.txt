e=randint(0,1)
self.frame_init()
if e==0:
    L=[-2.5,-2,-1.5,-1,-0.5,0.5,1,1.5,2,2.5]
    a=choice(L)
    b=randint(-5,5)
    while b==0:
        b=randint(-5,5)
    self.add(" Soit $f$ la fonction définie pour tout $x \in \R$ par $f(x)=",False)
    self.add_coef(a,False)
    self.add("x^2",False)
    self.add_nombre_somme(b,False)
    self.add("$. Tracer l'allure de la courbe représentative de la fonction $f$",False)
    self.add("\\vspace*{1cm} \n Soit $f$ la fonction définie pour tout $x \in \R$ par $f(x)=")
    self.add_coef(a)
    self.add("x^2 ")
    self.add_nombre_somme(b)
    self.add("$. Tracer l'allure de la courbe représentative de la fonction $f$. \n \n \\begin{multicols}{2} \n ")
    if a>0:
        self.add("On a $a=")
        self.add_nombre(a)
        self.add(">0$ donc la courbe a 'la forme d'un sourire'. Puis la fonction est de la forme $ax^2+b$ donc admet l'axe des ordonnées comme axe de symétrie, l'abscisse de son sommet est 0 et il nous reste à calculer l'image de 0. $$f(0)= ")
        self.add_nombre(a)
        self.add("\\times 0^2")
        self.add_nombre_somme(b)
        self.add("=")
        self.add_nombre(b)
        self.add("$$ \n \n  \\columnbreak  \n \n \\begin{tikzpicture} ")
        if b>0:
            self.add("\n \\draw[black, thick, ->] (-3.0, 1) -- (3.0, 1); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x)*(\\x)+3}); \n \\end{scope} \n  \\draw[black, thick] (0.1, 3) -- (-0.1, 3); \n \\draw[left] (0, 3) node[scale = 1] {$")
            self.add_nombre(b) 
            self.add("$};\n \\end{tikzpicture} \n \\end{multicols} \n ")
        else : 
            self.add("\n \\draw[black, thick, ->] (-3.0, 4) -- (3.0, 4); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x)*(\\x)+1}); \n \\end{scope} \n \\draw[black, thick] (0.1, 1) -- (-0.1, 1); \n \\draw[left] (0, 1) node[scale = 1] {$")
            self.add_nombre(b) 
            self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
    else :
        self.add("On a $a=")
        self.add_nombre(a)
        self.add("<0$ donc la courbe a 'la forme inverse d'un sourire'. Puis la fonction est de la forme $ax^2+b$ donc admet l'axe des ordonnées comme axe de symétrie, l'abscisse de son sommet est 0 et il nous reste à calculer l'image de 0. $$f(0)= ")
        self.add_nombre(a)
        self.add("\\times 0^2")
        self.add_nombre_somme(b)
        self.add("=")
        self.add_nombre(b)
        self.add("$$ \n \n  \\columnbreak  \n \n \\begin{tikzpicture} ")
        if b>0:
            self.add("\n \\draw[black, thick, ->] (-3.0, 1) -- (3.0, 1); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x)*(\\x)+3}); \n \\end{scope} \n \\draw[black, thick] (0.1, 3) -- (-0.1, 3); \n \\draw[left] (0, 3)node[scale = 1] {$")
            self.add_nombre(b) 
            self.add("$};\n \\end{tikzpicture} \n \\end{multicols} \n ")
        else : 
            self.add("\n \\draw[black, thick, ->] (-3.0, 4) -- (3.0, 4); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x)*(\\x)+3}); \n \\end{scope} \n \\draw[black, thick] (0.1, 3) -- (-0.1, 3); \n \\draw[left] (0, 3) node[scale = 1] {$")
            self.add_nombre(b) 
            self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
else : 
    L=[-2.5,-2,-1.5,-1,-0.5,0.5,1,1.5,2,2.5]
    a=choice(L)
    b=randint(-5,5)
    c=randint(-5,5)
    while b==0 or c==0:
        b=randint(-5,5)
        c=randint(-5,5)
    self.add(" Soit $f$ la fonction définie pour tout $x \in \R$ par $f(x)=",False)
    self.add_coef(a,False)
    self.add("(x",False)
    self.add_nombre_somme(b,False)
    self.add(")(x",False)
    self.add_nombre_somme(c,False)
    self.add(")$",False)
    self.add(". \n \n  Tracer l'allure de la courbe représentative de la fonction $f$",False)

    self.add(" \\vspace*{1cm} Soit $f$ la fonction définie pour tout $x \in \R$ par $f(x)=")
    self.add_coef(a)
    self.add("(x")
    self.add_nombre_somme(b)
    self.add(")(x")
    self.add_nombre_somme(c)
    self.add(")$")
    self.add(". \n \n  Tracer l'allure de la courbe représentative de la fonction $f$ \n \n \\begin{multicols}{2} \n ")
    if a>0:
        self.add("On a $a=")
        self.add_nombre(a)
        self.add(">0$ donc la courbe a 'la forme d'un sourire'. Puis la fonction est de la forme $a(x-x_1)(x-x_2)$ donc on connait les deux racines qui sont ")
        self.add_nombre(-b)
        self.add(" et ")
        self.add_nombre(-c)
        self.add(". Donc la courbe coupe l'axe des abscisses en ")
        self.add_nombre(-b)
        self.add(" et ")
        self.add_nombre(-c)
        self.add(". \n \n  \\columnbreak  \n \n \\begin{tikzpicture} ")
        if b==c and b>0:
            self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+1)*(\\x+1)+2}); \n \\end{scope} \n \\draw[below] (-1,2) node[scale = 1] {$")
            self.add_nombre(-c) 
            self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b==c and b<0:
            self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x-1)*(\\x-1)+2}); \n \\end{scope}  \n \\draw[below] (1, 2) node[scale = 1] {$")
            self.add_nombre(-c) 
            self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b*c>0 and b>0:
            if b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5); \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+1.5)*(\\x+0.5)+1}); \n \\end{scope} \n \\draw[below] (-2.5, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (-0.3, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c>b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5); \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+1.5)*(\\x+0.5)+1}); \n \\end{scope} \n \\draw[below] (-2.5, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (-0.3, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b*c>0 and b<0:
            if b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-2,0) -- (-2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x-1.5)*(\\x-0.5)+1}); \n \\end{scope}  \n \\draw[below] (2.2, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (-0.2, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c>b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-2,0) -- (-2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x-1.5)*(\\x-0.5)+1}); \n \\end{scope}  \n \\draw[below] (2.2, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (-0.2, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b*c<0:
            if b==-c and b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+1)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            if b==-c and b<c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+1)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif b<c and -b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-1,0) -- (-1, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+2)*(\\x-1)+2.5}); \n \\end{scope} \n \\draw[below] (-2, 2) node[scale = 1]  {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (1.1, 2) node[scale = 1]{$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif b<c and -b<c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+2)*(\\x-1)+2.5}); \n \\end{scope} \n \\draw[below] (-2, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (1.1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c<b and -c>b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-1,0) -- (-1, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+2)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-2, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c<b and -c<b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {(\\x+2)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-2, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
    else :
        self.add("On a $a=")
        self.add_nombre(a)
        self.add("<0$ donc la courbe a 'la forme inverse d'un sourire'. Puis la fonction est de la forme $a(x-x_1)(x-x_2)$ donc on connait les deux racines qui sont ")
        self.add_nombre(-b)
        self.add(" et ")
        self.add_nombre(-c)
        self.add(". Donc la courbe coupe l'axe des abscisses en ")
        self.add_nombre(-b)
        self.add(" et ")
        self.add_nombre(-c)
        self.add(". \n \n  \\columnbreak  \n \n \\begin{tikzpicture} ")
        if b==c and b>0:
            self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+1)*(\\x+1)+2}); \n \\end{scope} \n \\draw[below] (-1,2) node[scale = 1] {$")
            self.add_nombre(-c) 
            self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b==c and b<0:
            self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x-1)*(\\x-1)+2}); \n \\end{scope}  \n \\draw[below] (1, 2) node[scale = 1] {$")
            self.add_nombre(-c) 
            self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b*c>0 and b>0:
            if b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (1,0) -- (1, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+2)*(\\x+1)+3}); \n \\end{scope} \n \\draw[below] (-2.5, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (-0.7, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c>b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (2,0) -- (2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+2)*(\\x+1)+2.5}); \n \\end{scope} \n \\draw[below] (-2, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (-1,2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b*c>0 and b<0:
            if b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-2,0) -- (-2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x-2)*(\\x-1)+2.5}); \n \\end{scope}  \n \\draw[below] (2.1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c>b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-2,0) -- (-2, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x-2)*(\\x-1)+2.5}); \n \\end{scope}  \n \\draw[below] (2, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
        elif b*c<0:
            if b==-c and b<c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+1)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            if b==-c and b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+1)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif b<c and -b>c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+1)*(\\x-2)+2.5}); \n \\end{scope} \n \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (2, 2)  node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif b<c and -b<c:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+2)*(\\x-1)+2.5}); \n \\end{scope} \n \\draw[below] (-2, 2)  node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")
            elif c<b and -c>b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (-1,0) -- (-1, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+2)*(\\x-1)+2.5}); \n \\end{scope} \n  \\draw[below] (-2, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (1, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")  
            elif c<b and -c<b:
                self.add("\n \\draw[black, thick, ->] (-3.0, 2) -- (3.0, 2); \n \\draw[black, thick, ->] (0,0) -- (0, 5); \n \\begin{scope} \n \\clip  (-3, 0) rectangle  (3, 5) ; \n \\draw[thick, domain = -3:3, samples = 1000] plot (\\x, {-(\\x+1)*(\\x-2)+2.5}); \n \\end{scope} \n  \\draw[below] (-1, 2) node[scale = 1] {$")
                self.add_nombre(-b) 
                self.add("$}; \n \\draw[below] (2, 2) node[scale = 1] {$")
                self.add_nombre(-c) 
                self.add("$}; \n \\end{tikzpicture} \n \\end{multicols} \n ")            
self.frame_end()