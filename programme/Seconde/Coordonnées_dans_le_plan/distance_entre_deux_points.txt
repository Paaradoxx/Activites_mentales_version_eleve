a=randint(-6,6)
b=randint(-6,6)
c=randint(-6,6)
d=randint(-6,6)
e=randint(0,25)
f=randint(0,25)
while a==c and b==d :
    a=randint(-6,6)
    b=randint(-6,6)
    c=randint(-6,6)
    d=randint(-6,6)
while e==f or e==8 or e==9 or e==14 or f==8 or f==9 or f==14 :
    e=randint(0,25)
    f=randint(0,25)
L=list(string.ascii_uppercase)
self.frame_init()
self.add("Calculer la distance entre le point $",False)
self.add(L[e],False)
self.add("(",False)
self.add_nombre(a,False)
self.add(";",False)
self.add_nombre(b,False)
self.add(")$ et le point $ ",False)
self.add(L[f],False)
self.add("(",False)
self.add_nombre(c,False)
self.add(";",False)
self.add_nombre(d,False)
self.add(")$",False)

self.add("Calculer la distance entre le point $")
self.add(L[e])
self.add("(")
self.add_nombre(a)
self.add(";")
self.add_nombre(b)
self.add(")$ et le point $ ")
self.add(L[f])
self.add("(")
self.add_nombre(c)
self.add(";")
self.add_nombre(d)
self.add(")$ La distance entre les deux points est donn√©es par la formule : \\begin{align*} ")
self.add(L[e])
self.add(L[f])
self.add(" &=\sqrt{(x_")
self.add(L[e])
self.add("-x_")
self.add(L[f])
self.add(")^2 + (y_")
self.add(L[e])
self.add("-y_")
self.add(L[f])
self.add(")^2} \\\ &= \\sqrt{(")
self.add_nombre(a)
self.add("-")
self.add_nombre_produit(c)
self.add(")^2 + (")
self.add_nombre(b)
self.add("-")
self.add_nombre_produit(d)
self.add(")^2} \\\ &= \\sqrt{")
self.add_nombre_produit(a-c)
self.add("^2 +")
self.add_nombre_produit(b-d)
self.add("^2} \\\ &= \\sqrt{")
self.add_nombre((a-c)**2)
self.add("+")
self.add_nombre((b-d)**2)
self.add("} \\\ &= \\sqrt{")
self.add_nombre((a-c)**2+(b-d)**2)
self.add("} ")
g, h = simplification_racine(1, (a-c)**2+(b-d)**2)
if g==1 and h!=1 :
    self.add(" \\end{align*}")
elif h==1 :
    self.add("\\\ &= ")
    self.add_nombre(g)
    self.add("\\end{align*}")
else :
    self.add(" \\\ &=")
    self.add_nombre(g)
    self.add(" \\sqrt{")
    self.add_nombre(h)
    self.add("} \\end{align*}")

self.frame_end()