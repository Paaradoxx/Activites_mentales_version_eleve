a=randint(-10,10)
b=randint(-10,10)
c=randint(-10,10)
d=randint(-10,10)
while c==d:
    c=randint(-10,10)
    d=randint(-10,10)
e=a*c+b
f=a*d+b
self.frame_init()
self.add("Quelle est l'expression de la fonction affine passant par les points de coordonnées (",False)
self.add("\\vspace*{1cm} \n \\footnotesize{Quelle est l'expression de la fonction affine passant par les points de coordonnées (")
self.add_nombre(c,False)
self.add(";",False)
self.add_nombre(e,False)
self.add(") et (",False)
self.add_nombre(d,False)
self.add(";",False)
self.add_nombre(f,False)
self.add(") ?",False)
self.add_nombre(c)
self.add(";")
self.add_nombre(e)
self.add(") et (")
self.add_nombre(d)
self.add(";")
self.add_nombre(f)
self.add(") ? Il existe deux techniques :} \n \\begin{multicols}{2} \n \\begin{enumerate} \n \\item On résout un système : $$ \\begin{array}{rcl} \n & \\textcolor{white}{\\Leftrightarrow} & \n \\left \n \\{\\begin{array}{rcl}")
self.add_nombre(c)
self.add("\\times m + p&=&")
self.add_nombre(e) 
self.add(" \\\ \n ")
self.add_nombre(d) 
self.add("\\times m+p&=&")
self.add_nombre(f)
self.add("\\end{array} \\right. \\\ \n &\\Leftrightarrow & \\left \n \\{\\begin{array}{rcl} p&=&")
self.add_nombre(e)
if c==0:
    self.add("0 \\\ \n ")
else :
    self.add_nombre_somme(-c)
    self.add("m \\\ \n ")
self.add_coef(d) 
self.add("m+p&=&")
self.add_nombre(f)
self.add("\\end{array} \\right. \\\ \n &\\Leftrightarrow & \\left \n \\{\\begin{array}{rcl} p&=&")
self.add_nombre(e)
if c==0:
    self.add("0 \\\ \n ")
else :
    self.add_coef_somme(-c)
    self.add("m \\\ \n ")
self.add_coef(d) 
self.add("m+(")
self.add_nombre(e)
if c==0:
    self.add("0 \\\ \n ")
else :
    self.add_coef_somme(-c)
    self.add("m)")
self.add(" &=&")
self.add_nombre(f)
self.add("\\end{array} \\right. \\\ &\\Leftrightarrow& \\left \\{\\begin{array}{rcl}p&=&")
self.add_nombre(e)
if c==0:
    self.add("0 \\\ \n ")
else :
    self.add_coef_somme(-c)
    self.add("m \\\ \n ")
self.add_nombre(e)
self.add_coef_somme(d-c)
self.add("m&=&")
self.add_nombre(f)
self.add("\\end{array} \\right. \\\ &\\Leftrightarrow& \\left \\{\\begin{array}{rcl}p&=&")
self.add_nombre(e)
if c==0:
    self.add("0 \\\ \n ")
else :
    self.add_coef_somme(-c)
    self.add("m \\\ \n ")
self.add_coef(d-c)
self.add("m&=&")
self.add_nombre(f-e)
self.add("\\end{array} \\right. \\\  &\\Leftrightarrow& \\left \\{\\begin{array}{rcl} p&=&")
self.add_nombre(b)
self.add(" \\\  m&=&")
self.add_nombre(a)
self.add("\\end{array}\\right. \\end{array}$$ \n Ainsi on a $f:x\mapsto ")
if a==0:
    self.add_nombre(b)
else :
    self.add_coef(a)
    self.add("x")
    self.add_nombre_somme(b)
self.add("$ \n \\columnbreak \n \\item \n \\footnotesize{On applique la formule du cours pour calculer $m$ :$$ \\dfrac{f(x_1)-f(x_2)}{x_1-x_2}=\\dfrac{")
self.add_nombre(e)
self.add("-")
self.add_nombre_produit(f)
self.add("}{")
self.add_nombre(c)
self.add("-")
self.add_nombre_produit(d)
self.add("}= \\dfrac{")
self.add_nombre(e-f)
self.add("}{")
self.add_nombre(c-d)
self.add("}=")
self.add_nombre(a)
self.add("$$} \\footnotesize{ Ainsi on a $f(x)= ")
if a==0:
    self.add("p$\n  On cherche maintenant la valeur de $p$. On sait que $f(")
else :
    self.add_coef(a)
    self.add("x +p $. \n  \\\ On cherche maintenant la valeur de $p$. On sait que $f(")
self.add_nombre(c)
self.add(")=")
self.add_nombre(e)
self.add("$. On doit donc résoudre $(E): ")
self.add_nombre(a)
self.add("\\times")
self.add_nombre_produit(c)
self.add("+p=")
self.add_nombre(e)
self.add("$}")
self.add("\t \n \\begin{align*} (E)& \\Leftrightarrow ")
self.add_nombre(a*c)
self.add("+p=")
self.add_nombre(e)
self.add("\\\\\n\t\t ")
self.add("\t & \\Leftrightarrow ")
self.add("p")
self.add("=")
self.add_nombre(e)
self.add_nombre_somme(-a*c)
self.add("\\\\\n\t\t")
self.add("\t & \\Leftrightarrow ")
self.add("p")
self.add("=")
self.add_nombre(b)
self.add("\n\t \\end{align*} \n Ainsi on a $f:x\mapsto ")
if a==0:
    self.add_nombre(b)
else :
    self.add_coef(a)
    self.add("x")
    self.add_nombre_somme(b)
self.add("$")
self.add(" \n \\end{enumerate} \n \\end{multicols} \n ")
self.frame_end()