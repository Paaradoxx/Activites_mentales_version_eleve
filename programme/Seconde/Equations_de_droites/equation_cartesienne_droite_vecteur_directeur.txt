a, b = randint(-10, 10), randint(-10, 10)
while a == 0:
    a = randint(-10, 10)
while b == 0:
    b = randint(-10, 10)
xM, yM = randint(-10, 10), randint(-10, 10)

self.frame_init()
self.add("On considère le point ", False)
self.point("M", xM, yM, False)
self.add(" et le vecteur $\\vv{u}", False)
self.vco(-b, a, False)
self.add("$.\n\n\\bigskip\n\nDéterminer une équation cartésienne de la droite passant par $M$ et de vecteur directeur $\\vv{u}$", False)

self.add("\\vspace*{2em}\n$d$ est de vecteur directeur $\\vv{u}")
self.vco(-b, a)
self.add("$ et passant par ")
self.point("M", xM, yM)
self.add(".\n\nUne équation cartésienne de la droite est de la forme $ax+by+c=0$.\n\nComme  $\\vv{u}")
self.vco(-b, a)
self.add("$ est un vecteur directeur de $d$, il est de la forme \n\n\\smallskip\n\n\\hfil $")
self.vco(-b,a)
self.add("=\\vco{-b}{a} \\Leftrightarrow \\begin{cases} ")
self.add_nombre(-b)
self.add("& = -b \\\\ ")    
self.add_nombre(a)
self.add("&=a \\end{cases} \\Leftrightarrow \\begin{cases} b &= ")
self.add_nombre(b)
self.add("\\\\ a &=")
self.add_nombre(a)
self.add("\\end{cases}.$\\smallskip\n\n L'équation est alors de la forme $")
self.add_coef(a)
self.add("x")
self.add_coef_somme(b)
self.add("y + c = 0$. Or \\[M(")
self.add_nombre(xM)
self.add("~;~")
self.add_nombre(yM)
self.add(") \\in d \\Leftrightarrow ")
if a == 1:
    self.add_nombre(xM)
elif a == -1:
    self.add("-")
    self.add_nombre_produit(xM)
else:
    self.add_nombre(a)
    self.add("\\times ")
    self.add_nombre_produit(xM)
if b == 1:
    self.add_nombre_somme(yM)
elif b == -1:
    self.add("-")
    self.add_nombre_produit(yM)
else:
    self.add_nombre_somme(b)
    self.add("\\times ")
    self.add_nombre_produit(yM)
self.add("+c=0 \\Leftrightarrow ")
self.add_nombre(a*xM+b*yM)
self.add("+c = 0 \\Leftrightarrow c = ")
self.add_nombre(-(a*xM+b*yM))
self.add(".\\] Finalement une équation cartésienne de la droite passant par ")
self.point("M", xM, yM)
self.add(" et de vecteur directeur $\\vv{u}")
self.vco(-b, a)
self.add("$ est $d:~")
self.add_coef(a)
self.add("x")
self.add_coef_somme(b)
self.add("y")
if -(a*xM+b*yM) != 0:
    self.add_nombre_somme(-(a*xM+b*yM))
self.add("=0.$")
self.frame_end()